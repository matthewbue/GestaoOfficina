// <auto-generated />
using System;
using GestaoOfficina.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoOfficinaProj.Infra.Migrations
{
    [DbContext(typeof(GestaoOfficinaContext))]
    partial class GestaoOfficinaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestaoOfficina.Domain.Model.Automovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ano")
                        .HasColumnType("longtext");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasColumnType("longtext");

                    b.Property<string>("Km")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<int>("Observacoes")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Automoveis");
                });

            modelBuilder.Entity("GestaoOfficina.Domain.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AutomovelId")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<int?>("ManutenceId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroContato")
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroWhatsapp")
                        .HasColumnType("longtext");

                    b.Property<string>("Uf")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GestaoOfficina.Domain.Model.Manutence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AutomovelId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOS")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ManutenceServicoId")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoDoc")
                        .HasColumnType("longtext");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AutomovelId");

                    b.HasIndex("ClientsId");

                    b.ToTable("Manutences");
                });

            modelBuilder.Entity("GestaoOfficina.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Profission")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GestaoOfficinaProj.Domain.Model.ManutenceServico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Kmatual")
                        .HasColumnType("double");

                    b.Property<double>("Kmservico")
                        .HasColumnType("double");

                    b.Property<int?>("ManutenceId")
                        .HasColumnType("int");

                    b.Property<double>("Mediakm")
                        .HasColumnType("double");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("ManutenceId");

                    b.ToTable("ManutenceServicos");
                });

            modelBuilder.Entity("GestaoOfficinaProj.Domain.Model.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("GestaoOfficina.Domain.Model.Automovel", b =>
                {
                    b.HasOne("GestaoOfficina.Domain.Model.Client", null)
                        .WithMany("Automoveis")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoOfficina.Domain.Model.Manutence", b =>
                {
                    b.HasOne("GestaoOfficina.Domain.Model.Automovel", "automovels")
                        .WithMany()
                        .HasForeignKey("AutomovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoOfficina.Domain.Model.Client", "Clients")
                        .WithMany()
                        .HasForeignKey("ClientsId");

                    b.Navigation("Clients");

                    b.Navigation("automovels");
                });

            modelBuilder.Entity("GestaoOfficinaProj.Domain.Model.ManutenceServico", b =>
                {
                    b.HasOne("GestaoOfficina.Domain.Model.Manutence", null)
                        .WithMany("ManutecesServicos")
                        .HasForeignKey("ManutenceId");
                });

            modelBuilder.Entity("GestaoOfficina.Domain.Model.Client", b =>
                {
                    b.Navigation("Automoveis");
                });

            modelBuilder.Entity("GestaoOfficina.Domain.Model.Manutence", b =>
                {
                    b.Navigation("ManutecesServicos");
                });
#pragma warning restore 612, 618
        }
    }
}
